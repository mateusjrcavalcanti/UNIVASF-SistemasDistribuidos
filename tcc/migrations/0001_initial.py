# Generated by Django 4.1.7 on 2023-02-28 08:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tcc.models.avaliacao
import tcc.models.trabalho


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('titulo', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homologacao_orientador', models.BooleanField(verbose_name='Homologação do Orientador:')),
                ('homologacao_coordenador', models.BooleanField(verbose_name='Homologação do Coordenador:')),
                ('avaliadores', models.ManyToManyField(limit_choices_to={'groups__name': 'Docentes'}, related_name='avaliacoes', to=settings.AUTH_USER_MODEL)),
                ('coorientadores', models.ManyToManyField(blank=True, limit_choices_to={'groups__name': 'Docentes'}, related_name='coorientacoes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('sigla', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data:')),
            ],
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2023, verbose_name='Ano')),
                ('numero', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)], verbose_name='Semestre')),
                ('reuniaoInicial', models.DateTimeField(blank=True, null=True, verbose_name='Reunião Inicial')),
                ('confirmacaoMatricula', models.DateTimeField(blank=True, null=True, verbose_name='Confirmação de Matrícula')),
                ('homologacaoAnteprojeto', models.DateTimeField(blank=True, null=True, verbose_name='Homologação dos Anteprojetos')),
                ('resultadosAnteprojeto', models.DateTimeField(blank=True, null=True, verbose_name='Divulgação do resultado dos anteprojetos')),
                ('formularioAcompanhamento', models.DateTimeField(blank=True, null=True, verbose_name='Formulário de Acompanhamento')),
                ('definicaoBanca', models.DateTimeField(blank=True, null=True, verbose_name='Definição das Bancas de Defesa')),
                ('homologacaoBanca', models.DateTimeField(blank=True, null=True, verbose_name='Homologação/divulgação das Bancas')),
                ('inicioDefesas', models.DateTimeField(blank=True, null=True, verbose_name='Início do período de defesas')),
                ('fimDefesas', models.DateTimeField(blank=True, null=True, verbose_name='Fim do período de defesas')),
                ('envio', models.DateTimeField(blank=True, null=True, verbose_name='Envio da versão final')),
                ('publicacaoUm', models.DateTimeField(blank=True, null=True, verbose_name='Publicação de notas de TCC I')),
                ('publicacaoDois', models.DateTimeField(blank=True, null=True, verbose_name='Publicação de notas de TCC II')),
                ('coordenador', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Docentes'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tcc.curso')),
            ],
            options={
                'verbose_name': 'Semestre',
                'verbose_name_plural': 'Semestres',
            },
        ),
        migrations.CreateModel(
            name='Trabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=250, null=True)),
                ('tipo', models.CharField(choices=[('I', 'TCC I'), ('II', 'TCC II')], max_length=2)),
                ('anteprojeto', models.FileField(blank=True, null=True, upload_to=tcc.models.trabalho.get_file_path_trabalho)),
                ('homologacao_orientador', models.BooleanField(verbose_name='Homologação do anteprojeto (Orientador):')),
                ('homologacao_coordenador', models.BooleanField(verbose_name='Homologação do anteprojeto (Coordenador):')),
                ('discente', models.ForeignKey(limit_choices_to={'groups__name': 'Discentes'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('orientador', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Docentes'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orientacoes', to=settings.AUTH_USER_MODEL)),
                ('semestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tcc.semestre')),
            ],
        ),
        migrations.CreateModel(
            name='Resultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidade', models.CharField(default='Juazeiro/BA', max_length=250, verbose_name='Localização:')),
                ('inicio', models.DateTimeField(verbose_name='Inicio:')),
                ('fim', models.TimeField(verbose_name='Fim:')),
                ('aprovado', models.BooleanField(verbose_name='Aprovado?')),
                ('media', models.FloatField(verbose_name='Média Final:')),
                ('banca', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tcc.banca')),
            ],
        ),
        migrations.AddField(
            model_name='banca',
            name='horario',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tcc.horario'),
        ),
        migrations.AddField(
            model_name='banca',
            name='trabalho',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tcc.trabalho'),
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avaliacao', models.FileField(null=True, upload_to=tcc.models.avaliacao.get_file_path_avaliacao)),
                ('avaliador', models.ForeignKey(limit_choices_to={'groups__name': 'Docentes'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('banca', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tcc.banca')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
            },
        ),
    ]
